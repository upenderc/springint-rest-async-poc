<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:int="http://www.springframework.org/schema/integration"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:stream="http://www.springframework.org/schema/integration/stream"
	xmlns:int-kafka="http://www.springframework.org/schema/integration/kafka"
	xmlns:int-http="http://www.springframework.org/schema/integration/http"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/integration/stream http://www.springframework.org/schema/integration/stream/spring-integration-stream.xsd
	 	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd 
        http://www.springframework.org/schema/integration/kafka http://www.springframework.org/schema/integration/kafka/spring-integration-kafka.xsd
        http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd
        http://www.springframework.org/schema/integration/http http://www.springframework.org/schema/integration/http/spring-integration-http.xsd">
      <context:property-placeholder location="application-test.properties" />
      
      <bean id="spelParser" class="org.springframework.expression.spel.standard.SpelExpressionParser" />
        <int:channel id="inputChannel">
        	<int:dispatcher task-executor="producerThreadExecutor"/>
        </int:channel>
         <task:executor id="producerThreadExecutor" pool-size="50" queue-capacity="10"  rejection-policy="DISCARD" />
        
       <int:channel id="throttlerChannel">
       		<int:queue capacity="100"/>
       </int:channel>
       <int:channel id="requestChannel" />
       <int:channel id="replyChannel" />
    <int:service-activator id="pubSubService" ref="pubSubBean" method="recAndPublish" input-channel="inputChannel" output-channel="replyChannel"/>
    <bean id="pubSubBean" class="com.uppi.poc.async.PubSubService" />
 	       
    <int:gateway id="asyncGateway"
		service-interface="com.uppi.poc.async.RestServiceGateway" error-channel="errorChannel" async-executor="async-executor"
		default-request-channel="requestChannel" default-request-timeout="100">
	</int:gateway>
	
	 <task:executor id="async-executor" pool-size="100" queue-capacity="100"  rejection-policy="DISCARD" />
	
	<int:chain input-channel="requestChannel">
		<int:header-enricher>
			<int:header name="Accept" value="application/json"></int:header>
			<int:header name="Content-Type" value="application/json"></int:header>
		</int:header-enricher>
		
	<int-http:outbound-gateway url="${endpoint.url}"
			http-method="GET" header-mapper="headerMapper"
			extract-request-payload="true" request-factory="requestFactory" 
			expected-response-type="java.lang.String">
			<int-http:request-handler-advice-chain>
				<ref bean="pciRestRetryAdvice" />
			</int-http:request-handler-advice-chain>
		</int-http:outbound-gateway>
	</int:chain>
	<int:bridge input-channel="replyChannel" output-channel="throttlerChannel" />
	<int:channel id="soapChannel" >
		<int:dispatcher task-executor="soapConsumerExecutor"/>
	</int:channel>
	<task:executor id="soapConsumerExecutor" pool-size="50" queue-capacity="100"  rejection-policy="DISCARD" />
	
	<int:bridge  input-channel="throttlerChannel" output-channel="soapChannel">
		<int:poller fixed-delay="1000" max-messages-per-poll="10" />
	</int:bridge>
	
 	<int:service-activator id="pConsumer" ref="soapConsumer" method="onMessage" input-channel="soapChannel" />
 	
 	<bean id="soapConsumer" class="com.uppi.poc.async.MessageConsumer" />
    	
	<bean id="headerMapper"
		class="org.springframework.integration.http.support.DefaultHttpHeaderMapper">
		<property name="outboundHeaderNames" value="*" />
		<property name="userDefinedHeaderPrefix" value="" />
	</bean>
       
       <bean id="requestFactory" 	class="org.springframework.http.client.HttpComponentsClientHttpRequestFactory">
		<constructor-arg ref="httpPoolClient" />
	</bean>
	
	<bean id="httpConnectionPool" class="com.uppi.poc.async.CustomHttpConnectionPool">
		<property name="maxConnection" value="50" />
		<property name="maxrouteConnection" value="5" />
		<property name="routePerConnection" value="5" />
		<property name="restConnectionTimeOut" value="3000"/>
		<property name="restReadTimeOut" value="5000"/>
		<property name="connectionURL" value="${endpoint.host}"/>
	</bean>
	<bean id="httpPoolClient" factory-bean="httpConnectionPool" factory-method="createHttpPoolClient" />
     <bean id="errorHandler" class="com.uppi.poc.async.ErrorHandler" />  
     <int:service-activator id="errorHandlerService" ref="errorHandler" method="onError"  input-channel="errorChannel"/> 
     
     
     <bean id="pciRestRetryAdvice"
		class="org.springframework.integration.handler.advice.RequestHandlerRetryAdvice">
		<property name="retryTemplate">
			<bean class="org.springframework.retry.support.RetryTemplate">
				<property name="backOffPolicy">
					<bean class="org.springframework.retry.backoff.FixedBackOffPolicy">
						<property name="backOffPeriod" value="5000" />
					</bean>
				</property>
				<property name="retryPolicy">
					 <bean class="org.springframework.retry.policy.ExpressionRetryPolicy">
					
                            <constructor-arg index="0" type="org.springframework.expression.Expression" value="#{spelParser.parseExpression('cause.statusCode.value() == 500 or    cause.statusCode.value()==404')}" />
                            <property name="maxAttempts" value="1" />
                        </bean>
				</property>
				<property name="listeners">
					<list>
						<bean class="com.uppi.poc.async.LogRetryStateListener" /> 
					</list>
				</property>
			</bean>
		</property>
	</bean>
     
     
</beans>